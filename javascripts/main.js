// Generated by CoffeeScript 1.8.0
$(window).load(function() {
  var handleLogout, token;
  handleLogout = function() {
    return firebase.auth().signOut().then((function() {
      return window.location.reload();
    }), function() {
      return window.location.reload();
    });
  };
  token = $.url('?token');
  if (token) {
    firebase.auth().signInWithCustomToken(token);
    updateQueryStringParam('token');
  }
  firebase.auth().onAuthStateChanged(function(user) {
    if (!user) {
      return;
    }
    window.logged_in_user = user;
    firebase.database().ref("posts").limitToLast(5).on('child_added', function(item) {
      return $('#posts').prepend(teacup.render(function() {
        return div('.post', function() {
          div('.upvotes', function() {
            span('.reddit-upvote');
            span('.reddit-upvote');
            span(function() {
              return "" + (item.child('upvotes').val()) + " upvotes";
            });
            span('.reddit-upvote');
            return span('.reddit-upvote');
          });
          return blockquote(".reddit-card", {
            'data-card-preview': '0',
            'data-card-created': "1504484075"
          }, function() {
            return a({
              href: "" + (item.child('url').val()) + "/?ref=share&ref_source=embed"
            });
          });
        });
      }));
    });
    return firebase.database().ref("users/" + user.uid).on('value', function(doc) {
      if (!doc.val()) {
        return handleLogout();
      }
      $('#user').html(teacup.render(function() {
        return form(function() {
          div('.user', function() {
            div(function() {
              return "User: " + user.uid;
            });
            if (doc.child('post').val()) {
              a({
                href: doc.child('post').val()
              }, function() {
                return doc.child('post').val();
              });
            }
            return div('.logout-wrap', function() {
              return div('.logout button', function() {
                return 'logout';
              });
            });
          });
          return div('.post', function() {
            var status;
            if (doc.child('post').val()) {
              status = doc.child('status').val() || 'processing';
              switch (status) {
                case 'processing':
                  div(function() {
                    span(function() {
                      return 'status: ' + status;
                    });
                    span('.reddit-upvote spin');
                    return span('.reddit-upvote spin');
                  });
                  return div(function() {
                    return 'Just hang tight a moment we are processing your post now';
                  });
                case 'processed':
                  div(function() {
                    return 'status: ' + status;
                  });
                  div(function() {
                    return 'Post is now processed! you got ' + doc.child('upvotes').val() + ' free upvotes';
                  });
                  return div(function() {
                    return 'Please click logout and use a new account to process another link!';
                  });
              }
            } else {
              div(function() {
                return 'Reddit Post: ';
              });
              input({
                placeholder: 'https://www.reddit.com/r/Tinder/comments/6xl52t/clippys_only_ever_had_a_single_use_for_me_in_my',
                value: doc.child('post').val(),
                required: true,
                pattern: "^https:\/\/www\.reddit\.com\/r\/(.+?)\/comments\/(.+?)\/.+",
                title: 'should match this format \n \nhttps://www.reddit.com/r/Tinder/comments/6xl52t/clippys_only_ever_had_a_single_use_for_me_in_my'
              });
              return input('.button', {
                type: 'submit'
              });
            }
          });
        });
      }));
      $('#user .logout').on('click', function(e) {
        return handleLogout();
      });
      return $('#user form').on('submit', function(e) {
        var current_user;
        e.preventDefault();
        current_user = doc.val();
        current_user.post = $('#user .post input').val();
        doc.ref.set(current_user);
        return false;
      });
    });
  });
  return $('.reddit-login').on('click', function(e) {
    var k, params, url, v;
    params = ((function() {
      var _ref, _results;
      _ref = {
        client_id: 'Ag0ViT48lPnFiQ',
        response_type: 'code',
        state: '123',
        redirect_uri: 'https://us-central1-botnet-a2e6f.cloudfunctions.net/redditAuth',
        duration: 'permanent',
        scope: 'vote identity'
      };
      _results = [];
      for (k in _ref) {
        v = _ref[k];
        _results.push("" + k + "=" + (encodeURIComponent(v)));
      }
      return _results;
    })()).join('&');
    url = "https://www.reddit.com/api/v1/authorize?" + params;
    return window.open(url);
  });
});
